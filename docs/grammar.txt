// document conventions
//  symbol1 | symbol2 <- represents symbol1 or symbol2
//  symbol* <- symbol appears zero or more times
// (...) <- precedence
// symbol+ <- symbol appears atleast once
// symbol? <- symbol appears zero or one time but no more than once 
// grammar is not case sensitive, exceptions are explicitly stated
// "symbol" is to be treated as token
// ' ' '\t' ||   '\r' || '\n' are whitespace to be skipped unless explicitly stated
// character sequence in "***" is to be treated as literal for example "xyz" represnt xyz symbol in source code
// anything inside [ ... ] is optional
//------------------------------------------------------------
//-----------------------GRAMMAR------------------------------
//------------------------------------------------------------

whitespace:
 " " | \t | \r | \n

digit:
    "0"| "1" | ... |" 9"

punctuator:
    ";" | "," | "." 

non_zero_digit:
     "1" | ... | "9"
alpha: 
    "a" | "b" | ... | "z" | "A" | "B" | ... | "Z" 

number:
    "0" | (non_zero_digit  digit*)

non-digit:
    alpha | "_"

string:
    "'" (whitespace | non-digit | digit | punctuator)* "'"

identifier:
    non-digit (digit | non-digit)*

keyword one of:
    CREATE | TABLE

char:
    "char" "(" number ")"

data_type:
    "int" | char

parameter:
    identifier data_type

create_table_statement:
    "CREATE" "TABLE"  identifier "(" parameter  ("," parameter)* ")"

argument:
    string | number

insert_statement:
    "INSERT" "INTO" identifier "VALUES"  "(" argument,  ("," argument)*    ")"   ( "," "(" argument,  ("," argument)*    ")" )*

select_args:
    identifier 

comparison:
    "<" | "<=" | ">" | ">=" | "="

primary:
    string | number | identifier

table_specifier:
    (identifier ".") primary

comparison_expression:
    table_specifier comparison table_specifier

select_statement:
    "SELECT" select_args ("," select_args)* "FROM" identifier [INNER JOIN identifier ON  comparison_expression] ["WHERE" comparison_expression]
    
statement:
    (create_table_statement | insert_statement | select_statement) ";"

